// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/post": {
            "get": {
                "description": "Получить список всех постов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Получить список постов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество постов на странице",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с списком постов",
                        "schema": {
                            "$ref": "#/definitions/bff.GetPostsResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создать новый пост с заголовком, содержанием и опциональными изображениями",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Создать новый пост",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Заголовок поста",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Содержание поста",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображения (множественная загрузка)",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное создание поста",
                        "schema": {
                            "$ref": "#/definitions/bff.CreatePostResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка в параметрах запроса",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/post/{id}": {
            "get": {
                "description": "Получить детальную информацию о посте по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Получить пост по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с информацией о посте",
                        "schema": {
                            "$ref": "#/definitions/bff.GetPostResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пост не найден",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновить пост по его идентификатору",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Обновить пост по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Заголовок поста",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Содержание поста",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Изображения (множественная загрузка)",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Удаленные изображения",
                        "name": "deleted_images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление поста",
                        "schema": {
                            "$ref": "#/definitions/bff.UpdatePostResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка в параметрах запроса",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удалить пост по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Удалить пост по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление поста",
                        "schema": {
                            "$ref": "#/definitions/bff.DeletePostResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/bff.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bff.CreatePostResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "bff.DeletePostResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "bff.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "bff.GetPostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/bff.Post"
                }
            }
        },
        "bff.GetPostsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bff.Post"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "bff.Image": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "bff.Post": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bff.Image"
                    }
                },
                "title": {
                    "type": "string"
                },
                "user_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "bff.UpdatePostResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5001",
	BasePath:         "/post-service/",
	Schemes:          []string{},
	Title:            "SwiftTalk Post Service API",
	Description:      "API сервиса постов для платформы SwiftTalk",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
